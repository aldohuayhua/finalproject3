{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar util = require('@firebase/util');\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar contains = function (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]'; // An array to capture listeners before the true auth functions\n// exist\n\nvar tokenListeners = [];\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\n\nvar FirebaseAppImpl =\n/** @class */\nfunction () {\n  function FirebaseAppImpl(options, config, firebase_) {\n    this.firebase_ = firebase_;\n    this.isDeleted_ = false;\n    this.services_ = {};\n    this.name_ = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled || false;\n    this.options_ = util.deepCopy(options);\n    this.INTERNAL = {\n      getUid: function () {\n        return null;\n      },\n      getToken: function () {\n        return Promise.resolve(null);\n      },\n      addAuthTokenListener: function (callback) {\n        tokenListeners.push(callback); // Make sure callback is called, asynchronously, in the absence of the auth module\n\n        setTimeout(function () {\n          return callback(null);\n        }, 0);\n      },\n      removeAuthTokenListener: function (callback) {\n        tokenListeners = tokenListeners.filter(function (listener) {\n          return listener !== callback;\n        });\n      }\n    };\n  }\n\n  Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\n    get: function () {\n      this.checkDestroyed_();\n      return this._automaticDataCollectionEnabled;\n    },\n    set: function (val) {\n      this.checkDestroyed_();\n      this._automaticDataCollectionEnabled = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n    get: function () {\n      this.checkDestroyed_();\n      return this.name_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n    get: function () {\n      this.checkDestroyed_();\n      return this.options_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FirebaseAppImpl.prototype.delete = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      _this.checkDestroyed_();\n\n      resolve();\n    }).then(function () {\n      _this.firebase_.INTERNAL.removeApp(_this.name_);\n\n      var services = [];\n      Object.keys(_this.services_).forEach(function (serviceKey) {\n        Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n          services.push(_this.services_[serviceKey][instanceKey]);\n        });\n      });\n      return Promise.all(services.map(function (service) {\n        return service.INTERNAL.delete();\n      }));\n    }).then(function () {\n      _this.isDeleted_ = true;\n      _this.services_ = {};\n    });\n  };\n  /**\r\n   * Return a service instance associated with this app (creating it\r\n   * on demand), identified by the passed instanceIdentifier.\r\n   *\r\n   * NOTE: Currently storage is the only one that is leveraging this\r\n   * functionality. They invoke it by calling:\r\n   *\r\n   * ```javascript\r\n   * firebase.app().storage('STORAGE BUCKET ID')\r\n   * ```\r\n   *\r\n   * The service name is passed to this already\r\n   * @internal\r\n   */\n\n\n  FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n    if (instanceIdentifier === void 0) {\n      instanceIdentifier = DEFAULT_ENTRY_NAME;\n    }\n\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {};\n    }\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\r\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n       * then we will pass that instance on, otherwise we pass `null`\r\n       */\n      var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;\n      var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n      this.services_[name][instanceIdentifier] = service;\n    }\n\n    return this.services_[name][instanceIdentifier];\n  };\n  /**\r\n   * Callback function used to extend an App instance at the time\r\n   * of service instance creation.\r\n   */\n\n\n  FirebaseAppImpl.prototype.extendApp = function (props) {\n    var _this = this; // Copy the object onto the FirebaseAppImpl prototype\n\n\n    util.deepExtend(this, props);\n    /**\r\n     * If the app has overwritten the addAuthTokenListener stub, forward\r\n     * the active token listeners on to the true fxn.\r\n     *\r\n     * TODO: This function is required due to our current module\r\n     * structure. Once we are able to rely strictly upon a single module\r\n     * implementation, this code should be refactored and Auth should\r\n     * provide these stubs and the upgrade logic\r\n     */\n\n    if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n      tokenListeners.forEach(function (listener) {\n        _this.INTERNAL.addAuthTokenListener(listener);\n      });\n      tokenListeners = [];\n    }\n  };\n  /**\r\n   * This function will throw an Error if the App has already been deleted -\r\n   * use before performing API actions on the App.\r\n   */\n\n\n  FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n    if (this.isDeleted_) {\n      error('app-deleted', {\n        name: this.name_\n      });\n    }\n  };\n\n  return FirebaseAppImpl;\n}(); // Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n\n\nFirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\n\nfunction createFirebaseNamespace() {\n  var apps_ = {};\n  var factories = {};\n  var appHooks = {}; // A namespace is a plain JavaScript Object.\n\n  var namespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    __esModule: true,\n    initializeApp: initializeApp,\n    app: app,\n    apps: null,\n    Promise: Promise,\n    SDK_VERSION: '5.5.9',\n    INTERNAL: {\n      registerService: registerService,\n      createFirebaseNamespace: createFirebaseNamespace,\n      extendNamespace: extendNamespace,\n      createSubscribe: util.createSubscribe,\n      ErrorFactory: util.ErrorFactory,\n      removeApp: removeApp,\n      factories: factories,\n      useAsService: useAsService,\n      Promise: Promise,\n      deepExtend: util.deepExtend\n    }\n  }; // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n\n  util.patchProperty(namespace, 'default', namespace); // firebase.apps is a read-only getter.\n\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n  /**\r\n   * Called by App.delete() - but before any services associated with the App\r\n   * are deleted.\r\n   */\n\n  function removeApp(name) {\n    var app = apps_[name];\n    callAppHooks(app, 'delete');\n    delete apps_[name];\n  }\n  /**\r\n   * Get the App object for a given name (or DEFAULT).\r\n   */\n\n\n  function app(name) {\n    name = name || DEFAULT_ENTRY_NAME;\n\n    if (!contains(apps_, name)) {\n      error('no-app', {\n        name: name\n      });\n    }\n\n    return apps_[name];\n  }\n\n  util.patchProperty(app, 'App', FirebaseAppImpl);\n\n  function initializeApp(options, rawConfig) {\n    if (rawConfig === void 0) {\n      rawConfig = {};\n    }\n\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      var name_1 = rawConfig;\n      rawConfig = {\n        name: name_1\n      };\n    }\n\n    var config = rawConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n    }\n\n    var name = config.name;\n\n    if (typeof name !== 'string' || !name) {\n      error('bad-app-name', {\n        name: name + ''\n      });\n    }\n\n    if (contains(apps_, name)) {\n      error('duplicate-app', {\n        name: name\n      });\n    }\n\n    var app = new FirebaseAppImpl(options, config, namespace);\n    apps_[name] = app;\n    callAppHooks(app, 'create');\n    return app;\n  }\n  /*\r\n   * Return an array of all the non-deleted FirebaseApps.\r\n   */\n\n\n  function getApps() {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps_).map(function (name) {\n      return apps_[name];\n    });\n  }\n  /*\r\n   * Register a Firebase Service.\r\n   *\r\n   * firebase.INTERNAL.registerService()\r\n   *\r\n   * TODO: Implement serviceProperties.\r\n   */\n\n\n  function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n    // Cannot re-register a service that already exists\n    if (factories[name]) {\n      error('duplicate-service', {\n        name: name\n      });\n    } // Capture the service factory for later service instantiation\n\n\n    factories[name] = createService; // Capture the appHook, if passed\n\n    if (appHook) {\n      appHooks[name] = appHook; // Run the **new** app hook on all existing apps\n\n      getApps().forEach(function (app) {\n        appHook('create', app);\n      });\n    } // The Service namespace is an accessor function ...\n\n\n    var serviceNamespace = function (appArg) {\n      if (appArg === void 0) {\n        appArg = app();\n      }\n\n      if (typeof appArg[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        error('invalid-app-argument', {\n          name: name\n        });\n      } // Forward service instance lookup to the FirebaseApp.\n\n\n      return appArg[name]();\n    }; // ... and a container for service-level properties.\n\n\n    if (serviceProperties !== undefined) {\n      util.deepExtend(serviceNamespace, serviceProperties);\n    } // Monkey-patch the serviceNamespace onto the firebase namespace\n\n\n    namespace[name] = serviceNamespace; // Patch the FirebaseAppImpl prototype\n\n    FirebaseAppImpl.prototype[name] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var serviceFxn = this._getService.bind(this, name);\n\n      return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n    };\n\n    return serviceNamespace;\n  }\n  /**\r\n   * Patch the top-level firebase namespace with additional properties.\r\n   *\r\n   * firebase.INTERNAL.extendNamespace()\r\n   */\n\n\n  function extendNamespace(props) {\n    util.deepExtend(namespace, props);\n  }\n\n  function callAppHooks(app, eventName) {\n    Object.keys(factories).forEach(function (serviceName) {\n      // Ignore virtual services\n      var factoryName = useAsService(app, serviceName);\n\n      if (factoryName === null) {\n        return;\n      }\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n      }\n    });\n  } // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n\n\n  function useAsService(app, name) {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    var useService = name;\n    var options = app.options;\n    return useService;\n  }\n\n  return namespace;\n}\n\nfunction error(code, args) {\n  throw appErrors.create(code, args);\n} // TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\n\n\nvar errors = {\n  'no-app': \"No Firebase App '{$name}' has been created - \" + 'call Firebase App.initializeApp()',\n  'bad-app-name': \"Illegal App name: '{$name}\",\n  'duplicate-app': \"Firebase App named '{$name}' already exists\",\n  'app-deleted': \"Firebase App named '{$name}' already deleted\",\n  'duplicate-service': \"Firebase service named '{$name}' already registered\",\n  'sa-not-supported': 'Initializing the Firebase SDK with a service ' + 'account is only allowed in a Node.js environment. On client ' + 'devices, you should instead initialize the SDK with an api key and ' + 'auth domain',\n  'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' + 'Firebase App instance.'\n};\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar firebase = createFirebaseNamespace();\nexports.firebase = firebase;\nexports.default = firebase;","map":{"version":3,"sources":["/Users/ziadeldessouky/Desktop/rutgers/homework/finalproject3/client/node_modules/@firebase/app/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","util","require","contains","obj","key","prototype","hasOwnProperty","call","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","options","config","firebase_","isDeleted_","services_","name_","name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","INTERNAL","getUid","getToken","Promise","resolve","addAuthTokenListener","callback","push","setTimeout","removeAuthTokenListener","filter","listener","get","checkDestroyed_","set","val","enumerable","configurable","delete","_this","then","removeApp","services","keys","forEach","serviceKey","instanceKey","all","map","service","_getService","instanceIdentifier","instanceSpecifier","undefined","factories","extendApp","bind","props","deepExtend","error","console","log","createFirebaseNamespace","apps_","appHooks","namespace","__esModule","initializeApp","app","apps","SDK_VERSION","registerService","extendNamespace","createSubscribe","ErrorFactory","useAsService","patchProperty","getApps","callAppHooks","rawConfig","name_1","createService","serviceProperties","appHook","allowMultipleInstances","serviceNamespace","appArg","args","_i","arguments","length","serviceFxn","apply","eventName","serviceName","factoryName","useService","code","appErrors","create","errors","firebase","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.5.9',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n"]},"metadata":{},"sourceType":"script"}
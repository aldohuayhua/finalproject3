{"ast":null,"code":"var _jsxFileName = \"/Users/ziadeldessouky/Desktop/rutgers/homework/newproj3/finalproject3/client/src/components/RecipeCardComponenet.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport InstructionsComponent from \"./InstructionsComponent\";\nimport API from '../utils/API';\n\nconst RecipeCardComponenet = ({\n  title,\n  image,\n  id,\n  userID\n}) => {\n  const [recipesInstructions, setRecipeInstructions] = useState([]);\n  const [query, setQuery] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const API_KEY = process.env.REACT_APP_SPOONACULAR_API_KEY;\n  useEffect(() => {\n    getRecipesInstructions();\n  }, [query]);\n\n  const getRecipesInstructions = async () => {\n    const response = await fetch(`https://api.spoonacular.com/recipes/${query}/information?includeNutrition=false&apiKey=${API_KEY}`);\n    const data = await response.json();\n    setRecipeInstructions(data);\n    console.log(data);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(e.target.value);\n    handleShow();\n  };\n\n  const saveRecipe = () => {\n    window.location = \"/profile\";\n    API.addFav(userID, {\n      favRecipes: {\n        title: title,\n        image: image,\n        recipesInstructions: recipesInstructions.instructions\n      }\n    }).catch(err => console.log(err));\n    console.log(userID);\n    console.log(recipesInstructions.instructions);\n  }; // const routeChange=()=> {\n  //     let path = `/profile`;\n  //     let history = useHistory();\n  //     history.push(path);\n  //   }\n\n\n  return React.createElement(Card, {\n    style: {\n      width: '18rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, title), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: getSearch,\n    value: id,\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Get Recipe\")), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Instructions for: \", title)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(InstructionsComponent, {\n    instructions: recipesInstructions.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: saveRecipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Save Changes\"))));\n};\n\nexport default RecipeCardComponenet;","map":{"version":3,"sources":["/Users/ziadeldessouky/Desktop/rutgers/homework/newproj3/finalproject3/client/src/components/RecipeCardComponenet.js"],"names":["React","useEffect","useState","Button","Card","Modal","InstructionsComponent","API","RecipeCardComponenet","title","image","id","userID","recipesInstructions","setRecipeInstructions","query","setQuery","show","setShow","handleClose","handleShow","API_KEY","process","env","REACT_APP_SPOONACULAR_API_KEY","getRecipesInstructions","response","fetch","data","json","console","log","getSearch","e","preventDefault","target","value","saveRecipe","window","location","addFav","favRecipes","instructions","catch","err","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport InstructionsComponent from \"./InstructionsComponent\";\nimport API from '../utils/API';\n\n\n\nconst RecipeCardComponenet = ({ title, image, id, userID }) => {\n    const [recipesInstructions, setRecipeInstructions] = useState([])\n    const [query, setQuery] = useState('')\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const API_KEY = process.env.REACT_APP_SPOONACULAR_API_KEY;\n\n    useEffect(() => {\n        getRecipesInstructions();\n    }, [query]);\n\n    const getRecipesInstructions = async () => {\n        const response = await fetch(`https://api.spoonacular.com/recipes/${query}/information?includeNutrition=false&apiKey=${API_KEY}`);\n        const data = await response.json();\n        setRecipeInstructions(data);\n        console.log(data);\n    }\n\n    const getSearch = e => {\n        e.preventDefault();\n        setQuery(e.target.value);\n        handleShow();\n    }\n\n    const saveRecipe = () => {\n\n        \n        window.location = \"/profile\"\n        \n        \n\n        API.addFav(userID, {favRecipes:{\n            title: title,\n            image: image,\n            recipesInstructions:recipesInstructions.instructions,\n\n        }}).catch(err => console.log(err));\n        console.log(userID)\n        console.log(recipesInstructions.instructions)\n    } \n\n    // const routeChange=()=> {\n    //     let path = `/profile`;\n    //     let history = useHistory();\n    //     history.push(path);\n    //   }\n\n    \n\n    return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={image} />\n                <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <Card.Text>\n                    </Card.Text>\n                    <Button onClick={getSearch} value={id} variant=\"primary\">Get Recipe</Button>\n                </Card.Body>\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Instructions for: {title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <InstructionsComponent instructions={recipesInstructions.instructions} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n          </Button>\n                        <Button variant=\"primary\" onClick={saveRecipe} >\n                            Save Changes\n          </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card>\n\n    )\n}\nexport default RecipeCardComponenet;"]},"metadata":{},"sourceType":"module"}